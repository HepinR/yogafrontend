{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\yoga enrollment\\\\frontend\\\\src\\\\components\\\\EnrollmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, FormControl, InputLabel, Select, MenuItem, Paper, Typography, Alert, Stepper, Step, StepLabel, Box, CircularProgress, Card, CardContent } from '@mui/material';\nimport PaymentConfirmation from './PaymentConfirmation';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Personal Details', 'Select Batch', 'Payment'];\nconst EnrollmentForm = () => {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [formData, setFormData] = useState({\n    name: '',\n    age: '',\n    email: '',\n    phone: '',\n    batchId: ''\n  });\n  const [batches, setBatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [enrollmentDetails, setEnrollmentDetails] = useState(null);\n  useEffect(() => {\n    fetchBatches();\n  }, []);\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const fetchBatches = async () => {\n    try {\n      console.log('Fetching batches from:', API_URL);\n      const response = await axios.get(`${API_URL}/batches`);\n      console.log('Batches response:', response.data);\n      setBatches(response.data);\n    } catch (err) {\n      console.error('Error fetching batches:', err);\n      setError('Failed to fetch batch times');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/enroll`, formData);\n      if (response.data.success) {\n        const selectedBatch = batches.find(b => b.id === parseInt(formData.batchId));\n        setEnrollmentDetails({\n          ...formData,\n          batchTime: selectedBatch === null || selectedBatch === void 0 ? void 0 : selectedBatch.time_slot,\n          paymentId: response.data.paymentId,\n          enrollmentDate: new Date().toLocaleDateString()\n        });\n        setShowConfirmation(true);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Enrollment failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleNext = () => {\n    if (validateStep(activeStep)) {\n      setActiveStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n  const validateStep = step => {\n    switch (step) {\n      case 0:\n        if (!formData.name || !formData.age || !formData.email || !formData.phone) {\n          setError('Please fill all required fields');\n          return false;\n        }\n        if (formData.age < 18 || formData.age > 65) {\n          setError('Age must be between 18 and 65');\n          return false;\n        }\n        break;\n      case 1:\n        if (!formData.batchId) {\n          setError('Please select a batch');\n          return false;\n        }\n        break;\n      default:\n        break;\n    }\n    setError('');\n    return true;\n  };\n  const renderStepContent = step => {\n    var _batches$find;\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Full Name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            required: true,\n            autoComplete: \"name\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Age\",\n            name: \"age\",\n            type: \"number\",\n            value: formData.age,\n            onChange: handleChange,\n            required: true,\n            helperText: \"Age must be between 18 and 65\",\n            sx: {\n              mb: 2,\n              '& .MuiFormHelperText-root': {\n                color: '#ffffff'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true,\n            autoComplete: \"email\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Phone\",\n            name: \"phone\",\n            value: formData.phone,\n            onChange: handleChange,\n            required: true,\n            autoComplete: \"tel\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: \"form-container\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              sx: {\n                color: '#81d4fa'\n              },\n              children: \"Select Batch Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              name: \"batchId\",\n              value: formData.batchId,\n              onChange: handleChange,\n              required: true,\n              children: batches.map(batch => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: batch.id,\n                children: batch.time_slot\n              }, batch.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: \"payment-info\",\n          sx: {\n            bgcolor: 'rgba(129, 212, 250, 0.05)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                color: '#81d4fa'\n              },\n              children: \"Payment Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                color: '#ffffff'\n              },\n              gutterBottom: true,\n              children: \"Monthly Fee: \\u20B9500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#ffffff'\n              },\n              children: [\"Selected Batch: \", (_batches$find = batches.find(b => b.id === parseInt(formData.batchId))) === null || _batches$find === void 0 ? void 0 : _batches$find.time_slot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: \"form-title\",\n        sx: {\n          color: '#87CEEB',\n          textShadow: '0 0 10px rgba(135, 206, 235, 0.3)'\n        },\n        children: \"Yoga Class Enrollment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        className: \"form-subtitle\",\n        sx: {\n          color: '#87CEEB',\n          mb: 2\n        },\n        children: \"Join our yoga classes for better health and peace of mind\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        className: \"stepper-container\",\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [renderStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mt: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            variant: \"outlined\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleSubmit,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 37\n            }, this) : 'Complete Payment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PaymentConfirmation, {\n      open: showConfirmation,\n      onClose: () => {\n        setShowConfirmation(false);\n        setFormData({\n          name: '',\n          age: '',\n          email: '',\n          phone: '',\n          batchId: ''\n        });\n        setActiveStep(0);\n      },\n      enrollmentDetails: enrollmentDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n_s(EnrollmentForm, \"JbDwWmYCQf+1K3TMh1n91dU9Sno=\");\n_c = EnrollmentForm;\nexport default EnrollmentForm;\nvar _c;\n$RefreshReg$(_c, \"EnrollmentForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","FormControl","InputLabel","Select","MenuItem","Paper","Typography","Alert","Stepper","Step","StepLabel","Box","CircularProgress","Card","CardContent","PaymentConfirmation","axios","jsxDEV","_jsxDEV","steps","EnrollmentForm","_s","activeStep","setActiveStep","formData","setFormData","name","age","email","phone","batchId","batches","setBatches","loading","setLoading","error","setError","showConfirmation","setShowConfirmation","enrollmentDetails","setEnrollmentDetails","fetchBatches","API_URL","process","env","REACT_APP_API_URL","console","log","response","get","data","err","handleSubmit","e","preventDefault","post","success","selectedBatch","find","b","id","parseInt","batchTime","time_slot","paymentId","enrollmentDate","Date","toLocaleDateString","_err$response","_err$response$data","handleChange","target","value","handleNext","validateStep","prevStep","handleBack","step","renderStepContent","_batches$find","className","children","fullWidth","label","onChange","required","autoComplete","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","type","helperText","color","map","batch","bgcolor","variant","gutterBottom","mt","elevation","textShadow","severity","onSubmit","display","justifyContent","disabled","onClick","length","size","open","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/yoga enrollment/frontend/src/components/EnrollmentForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    TextField,\r\n    Button,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Paper,\r\n    Typography,\r\n    Alert,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Box,\r\n    CircularProgress,\r\n    Card,\r\n    CardContent\r\n} from '@mui/material';\r\nimport PaymentConfirmation from './PaymentConfirmation';\r\nimport axios from 'axios';\r\n\r\nconst steps = ['Personal Details', 'Select Batch', 'Payment'];\r\n\r\nconst EnrollmentForm = () => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        age: '',\r\n        email: '',\r\n        phone: '',\r\n        batchId: ''\r\n    });\r\n    const [batches, setBatches] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [enrollmentDetails, setEnrollmentDetails] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchBatches();\r\n    }, []);\r\n    \r\n    const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\r\n\r\n    const fetchBatches = async () => {\r\n        try {\r\n            console.log('Fetching batches from:', API_URL);\r\n            const response = await axios.get(`${API_URL}/batches`);\r\n            console.log('Batches response:', response.data);\r\n            setBatches(response.data);\r\n        } catch (err) {\r\n            console.error('Error fetching batches:', err);\r\n            setError('Failed to fetch batch times');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/enroll`, formData);\r\n            if (response.data.success) {\r\n                const selectedBatch = batches.find(b => b.id === parseInt(formData.batchId));\r\n                setEnrollmentDetails({\r\n                    ...formData,\r\n                    batchTime: selectedBatch?.time_slot,\r\n                    paymentId: response.data.paymentId,\r\n                    enrollmentDate: new Date().toLocaleDateString()\r\n                });\r\n                setShowConfirmation(true);\r\n            }\r\n        } catch (err) {\r\n            setError(err.response?.data?.error || 'Enrollment failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleNext = () => {\r\n        if (validateStep(activeStep)) {\r\n            setActiveStep((prevStep) => prevStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevStep) => prevStep - 1);\r\n    };\r\n\r\n    const validateStep = (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                if (!formData.name || !formData.age || !formData.email || !formData.phone) {\r\n                    setError('Please fill all required fields');\r\n                    return false;\r\n                }\r\n                if (formData.age < 18 || formData.age > 65) {\r\n                    setError('Age must be between 18 and 65');\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1:\r\n                if (!formData.batchId) {\r\n                    setError('Please select a batch');\r\n                    return false;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const renderStepContent = (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <Box className=\"form-container\">\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Full Name\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleChange}\r\n                            required\r\n                            autoComplete=\"name\"\r\n                            sx={{ mb: 2}}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Age\"\r\n                            name=\"age\"\r\n                            type=\"number\"\r\n                            value={formData.age}\r\n                            onChange={handleChange}\r\n                            required\r\n                            helperText=\"Age must be between 18 and 65\"\r\n                            sx={{ mb: 2,\r\n                                '& .MuiFormHelperText-root': {\r\n                                color: '#ffffff'\r\n                                }\r\n                             }}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                            autoComplete=\"email\"\r\n                            sx={{ mb: 2}}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            value={formData.phone}\r\n                            onChange={handleChange}\r\n                            required\r\n                            autoComplete=\"tel\"\r\n                            sx={{ mb: 2}}\r\n                        />\r\n                    </Box>\r\n                );\r\n            case 1:\r\n                return (\r\n                    <Box className=\"form-container\">\r\n                        <FormControl fullWidth>\r\n                            <InputLabel sx={{ color: '#81d4fa' }}>\r\n                                Select Batch Time\r\n                            </InputLabel>\r\n                            <Select\r\n                                name=\"batchId\"\r\n                                value={formData.batchId}\r\n                                onChange={handleChange}\r\n                                required\r\n                                \r\n                            >\r\n                                {batches.map((batch) => (\r\n                                    <MenuItem key={batch.id} value={batch.id}>\r\n                                        {batch.time_slot}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <Card className=\"payment-info\" sx={{ bgcolor: 'rgba(129, 212, 250, 0.05)' }}>\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\" gutterBottom sx={{ color: '#81d4fa' }}>\r\n                                Payment Details\r\n                            </Typography>\r\n                            <Typography variant=\"body1\" sx={{ color: '#ffffff' }} gutterBottom>\r\n                                Monthly Fee: ₹500\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" sx={{ color: '#ffffff' }}>\r\n                                Selected Batch: {batches.find(b => b.id === parseInt(formData.batchId))?.time_slot}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ mt: 4, mb: 4 }}>\r\n            <Paper elevation={3} className=\"form-container\">\r\n                <Typography variant=\"h4\" className=\"form-title\"\r\n                    sx={{ \r\n                        color: '#87CEEB',\r\n                        textShadow: '0 0 10px rgba(135, 206, 235, 0.3)'\r\n                    }}\r\n                >\r\n                    Yoga Class Enrollment\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" className=\"form-subtitle\"\r\n                    sx={{ \r\n                        color: '#87CEEB',\r\n                        mb: 2\r\n                    }}\r\n                >\r\n                    Join our yoga classes for better health and peace of mind\r\n                </Typography>\r\n\r\n                {error && (\r\n                    <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                        {error}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Stepper activeStep={activeStep} className=\"stepper-container\">\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    {renderStepContent(activeStep)}\r\n\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 3 }}>\r\n                        <Button\r\n                            disabled={activeStep === 0}\r\n                            onClick={handleBack}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            Back\r\n                        </Button>\r\n                        {activeStep === steps.length - 1 ? (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleSubmit}\r\n                                disabled={loading}\r\n                            >\r\n                                {loading ? (\r\n                                    <CircularProgress size={24} color=\"inherit\" />\r\n                                ) : (\r\n                                    'Complete Payment'\r\n                                )}\r\n                            </Button>\r\n                        ) : (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={handleNext}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                        )}\r\n                    </Box>\r\n                </form>\r\n            </Paper>\r\n\r\n            <PaymentConfirmation\r\n                open={showConfirmation}\r\n                onClose={() => {\r\n                    setShowConfirmation(false);\r\n                    setFormData({\r\n                        name: '',\r\n                        age: '',\r\n                        email: '',\r\n                        phone: '',\r\n                        batchId: ''\r\n                    });\r\n                    setActiveStep(0);\r\n                }}\r\n                enrollmentDetails={enrollmentDetails}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EnrollmentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACIC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,IAAI,EACJC,SAAS,EACTC,GAAG,EACHC,gBAAgB,EAChBC,IAAI,EACJC,WAAW,QACR,eAAe;AACtB,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,SAAS,CAAC;AAE7D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC;IACrC6B,IAAI,EAAE,EAAE;IACRC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACZ2C,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EAE5E,MAAMJ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACAK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEL,OAAO,CAAC;MAC9C,MAAMM,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAC,GAAGP,OAAO,UAAU,CAAC;MACtDI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAC/ClB,UAAU,CAACgB,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVL,OAAO,CAACX,KAAK,CAAC,yBAAyB,EAAEgB,GAAG,CAAC;MAC7Cf,QAAQ,CAAC,6BAA6B,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBlB,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMhC,KAAK,CAACuC,IAAI,CAAC,GAAGZ,OAAO,CAACC,GAAG,CAACC,iBAAiB,SAAS,EAAErB,QAAQ,CAAC;MACtF,IAAIwB,QAAQ,CAACE,IAAI,CAACM,OAAO,EAAE;QACvB,MAAMC,aAAa,GAAG1B,OAAO,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACrC,QAAQ,CAACM,OAAO,CAAC,CAAC;QAC5EU,oBAAoB,CAAC;UACjB,GAAGhB,QAAQ;UACXsC,SAAS,EAAEL,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEM,SAAS;UACnCC,SAAS,EAAEhB,QAAQ,CAACE,IAAI,CAACc,SAAS;UAClCC,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAClD,CAAC,CAAC;QACF7B,mBAAmB,CAAC,IAAI,CAAC;MAC7B;IACJ,CAAC,CAAC,OAAOa,GAAG,EAAE;MAAA,IAAAiB,aAAA,EAAAC,kBAAA;MACVjC,QAAQ,CAAC,EAAAgC,aAAA,GAAAjB,GAAG,CAACH,QAAQ,cAAAoB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAclB,IAAI,cAAAmB,kBAAA,uBAAlBA,kBAAA,CAAoBlC,KAAK,KAAI,mBAAmB,CAAC;IAC9D,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMoC,YAAY,GAAIjB,CAAC,IAAK;IACxB5B,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAAC6B,CAAC,CAACkB,MAAM,CAAC7C,IAAI,GAAG2B,CAAC,CAACkB,MAAM,CAACC;IAC9B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIC,YAAY,CAACpD,UAAU,CAAC,EAAE;MAC1BC,aAAa,CAAEoD,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBrD,aAAa,CAAEoD,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMD,YAAY,GAAIG,IAAI,IAAK;IAC3B,QAAQA,IAAI;MACR,KAAK,CAAC;QACF,IAAI,CAACrD,QAAQ,CAACE,IAAI,IAAI,CAACF,QAAQ,CAACG,GAAG,IAAI,CAACH,QAAQ,CAACI,KAAK,IAAI,CAACJ,QAAQ,CAACK,KAAK,EAAE;UACvEO,QAAQ,CAAC,iCAAiC,CAAC;UAC3C,OAAO,KAAK;QAChB;QACA,IAAIZ,QAAQ,CAACG,GAAG,GAAG,EAAE,IAAIH,QAAQ,CAACG,GAAG,GAAG,EAAE,EAAE;UACxCS,QAAQ,CAAC,+BAA+B,CAAC;UACzC,OAAO,KAAK;QAChB;QACA;MACJ,KAAK,CAAC;QACF,IAAI,CAACZ,QAAQ,CAACM,OAAO,EAAE;UACnBM,QAAQ,CAAC,uBAAuB,CAAC;UACjC,OAAO,KAAK;QAChB;QACA;MACJ;QACI;IACR;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZ,OAAO,IAAI;EACf,CAAC;EAED,MAAM0C,iBAAiB,GAAID,IAAI,IAAK;IAAA,IAAAE,aAAA;IAChC,QAAQF,IAAI;MACR,KAAK,CAAC;QACF,oBACI3D,OAAA,CAACP,GAAG;UAACqE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B/D,OAAA,CAACnB,SAAS;YACNmF,SAAS;YACTC,KAAK,EAAC,WAAW;YACjBzD,IAAI,EAAC,MAAM;YACX8C,KAAK,EAAEhD,QAAQ,CAACE,IAAK;YACrB0D,QAAQ,EAAEd,YAAa;YACvBe,QAAQ;YACRC,YAAY,EAAC,MAAM;YACnBC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF1E,OAAA,CAACnB,SAAS;YACNmF,SAAS;YACTC,KAAK,EAAC,KAAK;YACXzD,IAAI,EAAC,KAAK;YACVmE,IAAI,EAAC,QAAQ;YACbrB,KAAK,EAAEhD,QAAQ,CAACG,GAAI;YACpByD,QAAQ,EAAEd,YAAa;YACvBe,QAAQ;YACRS,UAAU,EAAC,+BAA+B;YAC1CP,EAAE,EAAE;cAAEC,EAAE,EAAE,CAAC;cACP,2BAA2B,EAAE;gBAC7BO,KAAK,EAAE;cACP;YACH;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACF1E,OAAA,CAACnB,SAAS;YACNmF,SAAS;YACTC,KAAK,EAAC,OAAO;YACbzD,IAAI,EAAC,OAAO;YACZmE,IAAI,EAAC,OAAO;YACZrB,KAAK,EAAEhD,QAAQ,CAACI,KAAM;YACtBwD,QAAQ,EAAEd,YAAa;YACvBe,QAAQ;YACRC,YAAY,EAAC,OAAO;YACpBC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF1E,OAAA,CAACnB,SAAS;YACNmF,SAAS;YACTC,KAAK,EAAC,OAAO;YACbzD,IAAI,EAAC,OAAO;YACZ8C,KAAK,EAAEhD,QAAQ,CAACK,KAAM;YACtBuD,QAAQ,EAAEd,YAAa;YACvBe,QAAQ;YACRC,YAAY,EAAC,KAAK;YAClBC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAEd,KAAK,CAAC;QACF,oBACI1E,OAAA,CAACP,GAAG;UAACqE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC3B/D,OAAA,CAACjB,WAAW;YAACiF,SAAS;YAAAD,QAAA,gBAClB/D,OAAA,CAAChB,UAAU;cAACqF,EAAE,EAAE;gBAAEQ,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,EAAC;YAEtC;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb1E,OAAA,CAACf,MAAM;cACHuB,IAAI,EAAC,SAAS;cACd8C,KAAK,EAAEhD,QAAQ,CAACM,OAAQ;cACxBsD,QAAQ,EAAEd,YAAa;cACvBe,QAAQ;cAAAJ,QAAA,EAGPlD,OAAO,CAACiE,GAAG,CAAEC,KAAK,iBACf/E,OAAA,CAACd,QAAQ;gBAAgBoE,KAAK,EAAEyB,KAAK,CAACrC,EAAG;gBAAAqB,QAAA,EACpCgB,KAAK,CAAClC;cAAS,GADLkC,KAAK,CAACrC,EAAE;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEb,CACb;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAEd,KAAK,CAAC;QACF,oBACI1E,OAAA,CAACL,IAAI;UAACmE,SAAS,EAAC,cAAc;UAACO,EAAE,EAAE;YAAEW,OAAO,EAAE;UAA4B,CAAE;UAAAjB,QAAA,eACxE/D,OAAA,CAACJ,WAAW;YAAAmE,QAAA,gBACR/D,OAAA,CAACZ,UAAU;cAAC6F,OAAO,EAAC,IAAI;cAACC,YAAY;cAACb,EAAE,EAAE;gBAAEQ,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,EAAC;YAEhE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb1E,OAAA,CAACZ,UAAU;cAAC6F,OAAO,EAAC,OAAO;cAACZ,EAAE,EAAE;gBAAEQ,KAAK,EAAE;cAAU,CAAE;cAACK,YAAY;cAAAnB,QAAA,EAAC;YAEnE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb1E,OAAA,CAACZ,UAAU;cAAC6F,OAAO,EAAC,OAAO;cAACZ,EAAE,EAAE;gBAAEQ,KAAK,EAAE;cAAU,CAAE;cAAAd,QAAA,GAAC,kBAClC,GAAAF,aAAA,GAAChD,OAAO,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACrC,QAAQ,CAACM,OAAO,CAAC,CAAC,cAAAiD,aAAA,uBAAtDA,aAAA,CAAwDhB,SAAS;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAEf;QACI,OAAO,IAAI;IACnB;EACJ,CAAC;EAED,oBACI1E,OAAA,CAACP,GAAG;IAAC4E,EAAE,EAAE;MAAEc,EAAE,EAAE,CAAC;MAAEb,EAAE,EAAE;IAAE,CAAE;IAAAP,QAAA,gBACtB/D,OAAA,CAACb,KAAK;MAACiG,SAAS,EAAE,CAAE;MAACtB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3C/D,OAAA,CAACZ,UAAU;QAAC6F,OAAO,EAAC,IAAI;QAACnB,SAAS,EAAC,YAAY;QAC3CO,EAAE,EAAE;UACAQ,KAAK,EAAE,SAAS;UAChBQ,UAAU,EAAE;QAChB,CAAE;QAAAtB,QAAA,EACL;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEb1E,OAAA,CAACZ,UAAU;QAAC6F,OAAO,EAAC,WAAW;QAACnB,SAAS,EAAC,eAAe;QACrDO,EAAE,EAAE;UACAQ,KAAK,EAAE,SAAS;UAChBP,EAAE,EAAE;QACR,CAAE;QAAAP,QAAA,EACL;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAEZzD,KAAK,iBACFjB,OAAA,CAACX,KAAK;QAACiG,QAAQ,EAAC,OAAO;QAACjB,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,EACjC9C;MAAK;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACV,eAED1E,OAAA,CAACV,OAAO;QAACc,UAAU,EAAEA,UAAW;QAAC0D,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EACzD9D,KAAK,CAAC6E,GAAG,CAAEb,KAAK,iBACbjE,OAAA,CAACT,IAAI;UAAAwE,QAAA,eACD/D,OAAA,CAACR,SAAS;YAAAuE,QAAA,EAAEE;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC,GADvBT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAEV1E,OAAA;QAAMuF,QAAQ,EAAErD,YAAa;QAAA6B,QAAA,GACxBH,iBAAiB,CAACxD,UAAU,CAAC,eAE9BJ,OAAA,CAACP,GAAG;UAAC4E,EAAE,EAAE;YAAEmB,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,eAAe;YAAEN,EAAE,EAAE;UAAE,CAAE;UAAApB,QAAA,gBACjE/D,OAAA,CAAClB,MAAM;YACH4G,QAAQ,EAAEtF,UAAU,KAAK,CAAE;YAC3BuF,OAAO,EAAEjC,UAAW;YACpBuB,OAAO,EAAC,UAAU;YAAAlB,QAAA,EACrB;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRtE,UAAU,KAAKH,KAAK,CAAC2F,MAAM,GAAG,CAAC,gBAC5B5F,OAAA,CAAClB,MAAM;YACHmG,OAAO,EAAC,WAAW;YACnBU,OAAO,EAAEzD,YAAa;YACtBwD,QAAQ,EAAE3E,OAAQ;YAAAgD,QAAA,EAEjBhD,OAAO,gBACJf,OAAA,CAACN,gBAAgB;cAACmG,IAAI,EAAE,EAAG;cAAChB,KAAK,EAAC;YAAS;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAE9C;UACH;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC,gBAET1E,OAAA,CAAClB,MAAM;YACHmG,OAAO,EAAC,WAAW;YACnBU,OAAO,EAAEpC,UAAW;YAAAQ,QAAA,EACvB;UAED;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAER1E,OAAA,CAACH,mBAAmB;MAChBiG,IAAI,EAAE3E,gBAAiB;MACvB4E,OAAO,EAAEA,CAAA,KAAM;QACX3E,mBAAmB,CAAC,KAAK,CAAC;QAC1Bb,WAAW,CAAC;UACRC,IAAI,EAAE,EAAE;UACRC,GAAG,EAAE,EAAE;UACPC,KAAK,EAAE,EAAE;UACTC,KAAK,EAAE,EAAE;UACTC,OAAO,EAAE;QACb,CAAC,CAAC;QACFP,aAAa,CAAC,CAAC,CAAC;MACpB,CAAE;MACFgB,iBAAiB,EAAEA;IAAkB;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvE,EAAA,CA3RID,cAAc;AAAA8F,EAAA,GAAd9F,cAAc;AA6RpB,eAAeA,cAAc;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}